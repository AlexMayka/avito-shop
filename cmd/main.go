// Package main является точкой входа для приложения Avito Shop.
// Приложение выполняет инициализацию логгера, загрузку конфигурации,
// установление подключения к базе данных, настройку маршрутов и запуск HTTP-сервера.
package main

import (
	"avito_shop/config"
	router "avito_shop/internal/routes"
	"avito_shop/pkg"
	"avito_shop/pkg/db"
	"fmt"
)

// main выполняет следующие действия:
// 1. Инициализирует логгер приложения.
// 2. Загружает конфигурационные параметры.
// 3. Устанавливает подключение к базе данных с использованием настроек конфигурации.
// 4. Формирует адрес для запуска HTTP-сервера.
// 5. Настраивает маршруты приложения с привязкой к базе данных и конфигурации.
// 6. Запускает HTTP-сервер на указанном адресе.
// В случае возникновения ошибки при запуске сервера, выводит сообщение об ошибке и завершает работу.
func main() {
	// Инициализация логгера приложения
	pkg.InitLogger()

	// Загрузка конфигурационных параметров
	cfg := config.LoadConfig()

	// Инициализация подключения к базе данных
	database, err := db.InitDB(
		cfg.Db.Host,
		cfg.Db.Port,
		cfg.Db.User,
		cfg.Db.Password,
		cfg.Db.Db,
	)
	if err != nil {
		fmt.Println("Ошибка инициализации базы данных:", err)
		panic(err)
	}
	// Отложенное закрытие подключения к базе данных при завершении работы функции main
	defer database.Close()

	// Формирование адреса для запуска HTTP-сервера
	address := cfg.Host.ServerHost + ":" + cfg.Host.ServerPort

	// Настройка маршрутов приложения
	r := router.SetupRouter(database, cfg)

	// Запуск HTTP-сервера
	err = r.Run(address)
	if err != nil {
		fmt.Println("Ошибка при запуске сервера:", err)
		panic(err)
	}
}
